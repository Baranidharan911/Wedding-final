// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: i8KuCHvKrwawZpBmyovrv7
// Component: EPG7_va4O3nB
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Step2 from "../../Step2"; // plasmic-import: -enH8ptPHqxi/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: i8KuCHvKrwawZpBmyovrv7/projectcss
import sty from "./PlasmicVendorOnboardinSteps.module.css"; // plasmic-import: EPG7_va4O3nB/css

createPlasmicElementProxy;

export const PlasmicVendorOnboardinSteps__VariantProps = new Array();

export const PlasmicVendorOnboardinSteps__ArgProps = new Array();

const $$ = {};

function PlasmicVendorOnboardinSteps__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <Step2
        className={classNames("__wab_instance", sty.step2__wdEpi)}
        description={"Add Business Information"}
      />

      <section className={classNames(projectcss.all, sty.section___4Wmyb)} />
      <section className={classNames(projectcss.all, sty.section__caIq)} />
      <Step2
        className={classNames("__wab_instance", sty.step2__x9Xi7)}
        description={"Verify Whatsapp Number"}
        stepNumber={2}
      />

      <section className={classNames(projectcss.all, sty.section___10SfQ)} />
      <section className={classNames(projectcss.all, sty.section__cJiDv)} />
      <Step2
        className={classNames("__wab_instance", sty.step2___9UkXj)}
        description={"Upload your Documents"}
        stepNumber={3}
      />
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicVendorOnboardinSteps__ArgProps,
          internalVariantPropNames: PlasmicVendorOnboardinSteps__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicVendorOnboardinSteps__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicVendorOnboardinSteps";
  } else {
    func.displayName = `PlasmicVendorOnboardinSteps.${nodeName}`;
  }
  return func;
}

export const PlasmicVendorOnboardinSteps = Object.assign(
  // Top-level PlasmicVendorOnboardinSteps renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicVendorOnboardinSteps
    internalVariantProps: PlasmicVendorOnboardinSteps__VariantProps,
    internalArgProps: PlasmicVendorOnboardinSteps__ArgProps
  }
);

export default PlasmicVendorOnboardinSteps;
/* prettier-ignore-end */
