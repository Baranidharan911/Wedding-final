// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: i8KuCHvKrwawZpBmyovrv7
// Component: 3-VWNxcNSDds
import * as React from "react";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  hasVariant,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv, useGlobalActions } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import {
  executePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/Form";
import { formHelpers as FormWrapper_Helpers } from "@plasmicpkgs/antd5/skinny/Form";
import { FormItemWrapper } from "@plasmicpkgs/antd5/skinny/FormItem";
import { AntdInput } from "@plasmicpkgs/antd5/skinny/registerInput";
import { inputHelpers as AntdInput_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput";
import { AntdSelect } from "@plasmicpkgs/antd5/skinny/registerSelect";
import ButtonContainer from "../../ButtonContainer"; // plasmic-import: dK0EsHLm2W5O/component
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import { useScreenVariants as useScreenVariantszapf5SksSeNd } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ZAPF5sksSeNd/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: i8KuCHvKrwawZpBmyovrv7/projectcss
import sty from "./PlasmicLocationForm.module.css"; // plasmic-import: 3-VWNxcNSDds/css

createPlasmicElementProxy;

export const PlasmicLocationForm__VariantProps = new Array("noButton");

export const PlasmicLocationForm__ArgProps = new Array(
  "onLocationFormChange",
  "locationInfo",
  "userInfo",
  "vendorInfo",
  "onLocationCityChange",
  "onLocationStateChange",
  "locationId"
);

const $$ = {};

function PlasmicLocationForm__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const $globalActions = useGlobalActions?.();
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "form.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        refName: "form",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "form.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,
        refName: "form",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "input.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec("value", AntdInput_Helpers)
      },
      {
        path: "city.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "state.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec("value", AntdInput_Helpers)
      },
      {
        path: "cities",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({
          "Andaman and Nicobar Islands": ["Port Blair"],
          Haryana: [
            "Faridabad",
            "Gurgaon",
            "Hisar",
            "Rohtak",
            "Panipat",
            "Karnal",
            "Sonipat",
            "Yamunanagar",
            "Panchkula",
            "Bhiwani",
            "Bahadurgarh",
            "Jind",
            "Sirsa",
            "Thanesar",
            "Kaithal",
            "Palwal",
            "Rewari",
            "Hansi",
            "Narnaul",
            "Fatehabad",
            "Gohana",
            "Tohana",
            "Narwana",
            "Mandi Dabwali",
            "Charkhi Dadri",
            "Shahbad",
            "Pehowa",
            "Samalkha",
            "Pinjore",
            "Ladwa",
            "Sohna",
            "Safidon",
            "Taraori",
            "Mahendragarh",
            "Ratia",
            "Rania",
            "Sarsod"
          ],

          "Tamil Nadu": [
            "Chennai",
            "Coimbatore",
            "Madurai",
            "Tiruchirappalli",
            "Salem",
            "Tirunelveli",
            "Tiruppur",
            "Ranipet",
            "Nagercoil",
            "Thanjavur",
            "Vellore",
            "Kancheepuram",
            "Erode",
            "Tiruvannamalai",
            "Pollachi",
            "Rajapalayam",
            "Sivakasi",
            "Pudukkottai",
            "Neyveli (TS)",
            "Nagapattinam",
            "Viluppuram",
            "Tiruchengode",
            "Vaniyambadi",
            "Theni Allinagaram",
            "Udhagamandalam",
            "Aruppukkottai",
            "Paramakudi",
            "Arakkonam",
            "Virudhachalam",
            "Srivilliputhur",
            "Tindivanam",
            "Virudhunagar",
            "Karur",
            "Valparai",
            "Sankarankovil",
            "Tenkasi",
            "Palani",
            "Pattukkottai",
            "Tirupathur",
            "Ramanathapuram",
            "Udumalaipettai",
            "Gobichettipalayam",
            "Thiruvarur",
            "Thiruvallur",
            "Panruti",
            "Namakkal",
            "Thirumangalam",
            "Vikramasingapuram",
            "Nellikuppam",
            "Rasipuram",
            "Tiruttani",
            "Nandivaram-Guduvancheri",
            "Periyakulam",
            "Pernampattu",
            "Vellakoil",
            "Sivaganga",
            "Vadalur",
            "Rameshwaram",
            "Tiruvethipuram",
            "Perambalur",
            "Usilampatti",
            "Vedaranyam",
            "Sathyamangalam",
            "Puliyankudi",
            "Nanjikottai",
            "Thuraiyur",
            "Sirkali",
            "Tiruchendur",
            "Periyasemur",
            "Sattur",
            "Vandavasi",
            "Tharamangalam",
            "Tirukkoyilur",
            "Oddanchatram",
            "Palladam",
            "Vadakkuvalliyur",
            "Tirukalukundram",
            "Uthamapalayam",
            "Surandai",
            "Sankari",
            "Shenkottai",
            "Vadipatti",
            "Sholingur",
            "Tirupathur",
            "Manachanallur",
            "Viswanatham",
            "Polur",
            "Panagudi",
            "Uthiramerur",
            "Thiruthuraipoondi",
            "Pallapatti",
            "Ponneri",
            "Lalgudi",
            "Natham",
            "Unnamalaikadai",
            "P.N.Patti",
            "Tharangambadi",
            "Tittakudi",
            "Pacode",
            "O' Valley",
            "Suriyampalayam",
            "Sholavandan",
            "Thammampatti",
            "Namagiripettai",
            "Peravurani",
            "Parangipettai",
            "Pudupattinam",
            "Pallikonda",
            "Sivagiri",
            "Punjaipugalur",
            "Padmanabhapuram",
            "Thirupuvanam"
          ],

          "Madhya Pradesh": [
            "Indore",
            "Bhopal",
            "Jabalpur",
            "Gwalior",
            "Ujjain",
            "Sagar",
            "Ratlam",
            "Satna",
            "Murwara (Katni)",
            "Morena",
            "Singrauli",
            "Rewa",
            "Vidisha",
            "Ganjbasoda",
            "Shivpuri",
            "Mandsaur",
            "Neemuch",
            "Nagda",
            "Itarsi",
            "Sarni",
            "Sehore",
            "Mhow Cantonment",
            "Seoni",
            "Balaghat",
            "Ashok Nagar",
            "Tikamgarh",
            "Shahdol",
            "Pithampur",
            "Alirajpur",
            "Mandla",
            "Sheopur",
            "Shajapur",
            "Panna",
            "Raghogarh-Vijaypur",
            "Sendhwa",
            "Sidhi",
            "Pipariya",
            "Shujalpur",
            "Sironj",
            "Pandhurna",
            "Nowgong",
            "Mandideep",
            "Sihora",
            "Raisen",
            "Lahar",
            "Maihar",
            "Sanawad",
            "Sabalgarh",
            "Umaria",
            "Porsa",
            "Narsinghgarh",
            "Malaj Khand",
            "Sarangpur",
            "Mundi",
            "Nepanagar",
            "Pasan",
            "Mahidpur",
            "Seoni-Malwa",
            "Rehli",
            "Manawar",
            "Rahatgarh",
            "Panagar",
            "Wara Seoni",
            "Tarana",
            "Sausar",
            "Rajgarh",
            "Niwari",
            "Mauganj",
            "Manasa",
            "Nainpur",
            "Prithvipur",
            "Sohagpur",
            "Nowrozabad (Khodargama)",
            "Shamgarh",
            "Maharajpur",
            "Multai",
            "Pali",
            "Pachore",
            "Rau",
            "Mhowgaon",
            "Vijaypur",
            "Narsinghgarh"
          ],

          Jharkhand: [
            "Dhanbad",
            "Ranchi",
            "Jamshedpur",
            "Bokaro Steel City",
            "Deoghar",
            "Phusro",
            "Adityapur",
            "Hazaribag",
            "Giridih",
            "Ramgarh",
            "Jhumri Tilaiya",
            "Saunda",
            "Sahibganj",
            "Medininagar (Daltonganj)",
            "Chaibasa",
            "Chatra",
            "Gumia",
            "Dumka",
            "Madhupur",
            "Chirkunda",
            "Pakaur",
            "Simdega",
            "Musabani",
            "Mihijam",
            "Patratu",
            "Lohardaga",
            "Tenu dam-cum-Kathhara"
          ],

          Mizoram: ["Aizawl", "Lunglei", "Saiha"],
          Nagaland: [
            "Dimapur",
            "Kohima",
            "Zunheboto",
            "Tuensang",
            "Wokha",
            "Mokokchung"
          ],

          "Himachal Pradesh": [
            "Shimla",
            "Mandi",
            "Solan",
            "Nahan",
            "Sundarnagar",
            "Palampur",
            "Kullu",
            "Manali"
          ],

          Tripura: [
            "Agartala",
            "Udaipur",
            "Dharmanagar",
            "Pratapgarh",
            "Kailasahar",
            "Belonia",
            "Khowai"
          ],

          "Andhra Pradesh": [
            "Visakhapatnam",
            "Vijayawada",
            "Guntur",
            "Nellore",
            "Kurnool",
            "Rajahmundry",
            "Kakinada",
            "Tirupati",
            "Anantapur",
            "Kadapa",
            "Vizianagaram",
            "Eluru",
            "Ongole",
            "Nandyal",
            "Machilipatnam",
            "Adoni",
            "Tenali",
            "Chittoor",
            "Hindupur",
            "Proddatur",
            "Bhimavaram",
            "Madanapalle",
            "Guntakal",
            "Dharmavaram",
            "Gudivada",
            "Srikakulam",
            "Narasaraopet",
            "Rajampet",
            "Tadpatri",
            "Tadepalligudem",
            "Chilakaluripet",
            "Yemmiganur",
            "Kadiri",
            "Chirala",
            "Anakapalle",
            "Kavali",
            "Palacole",
            "Sullurpeta",
            "Tanuku",
            "Rayachoti",
            "Srikalahasti",
            "Bapatla",
            "Naidupet",
            "Nagari",
            "Gudur",
            "Vinukonda",
            "Narasapuram",
            "Nuzvid",
            "Markapur",
            "Ponnur",
            "Kandukur",
            "Bobbili",
            "Rayadurg",
            "Samalkot",
            "Jaggaiahpet",
            "Tuni",
            "Amalapuram",
            "Bheemunipatnam",
            "Venkatagiri",
            "Sattenapalle",
            "Pithapuram",
            "Palasa Kasibugga",
            "Parvathipuram",
            "Macherla",
            "Gooty",
            "Salur",
            "Mandapeta",
            "Jammalamadugu",
            "Peddapuram",
            "Punganur",
            "Nidadavole",
            "Repalle",
            "Ramachandrapuram",
            "Kovvur",
            "Tiruvuru",
            "Uravakonda",
            "Narsipatnam",
            "Yerraguntla",
            "Pedana",
            "Puttur",
            "Renigunta",
            "Rajam",
            "Srisailam Project (Right Flank Colony) Township"
          ],

          Punjab: [
            "Ludhiana",
            "Patiala",
            "Amritsar",
            "Jalandhar",
            "Bathinda",
            "Pathankot",
            "Hoshiarpur",
            "Batala",
            "Moga",
            "Malerkotla",
            "Khanna",
            "Mohali",
            "Barnala",
            "Firozpur",
            "Phagwara",
            "Kapurthala",
            "Zirakpur",
            "Kot Kapura",
            "Faridkot",
            "Muktsar",
            "Rajpura",
            "Sangrur",
            "Fazilka",
            "Gurdaspur",
            "Kharar",
            "Gobindgarh",
            "Mansa",
            "Malout",
            "Nabha",
            "Tarn Taran",
            "Jagraon",
            "Sunam",
            "Dhuri",
            "Firozpur Cantt.",
            "Sirhind Fatehgarh Sahib",
            "Rupnagar",
            "Jalandhar Cantt.",
            "Samana",
            "Nawanshahr",
            "Rampura Phul",
            "Nangal",
            "Nakodar",
            "Zira",
            "Patti",
            "Raikot",
            "Longowal",
            "Urmar Tanda",
            "Morinda, India",
            "Phillaur",
            "Pattran",
            "Qadian",
            "Sujanpur",
            "Mukerian",
            "Talwara"
          ],

          Chandigarh: ["Chandigarh"],
          Rajasthan: [
            "Jaipur",
            "Jodhpur",
            "Bikaner",
            "Udaipur",
            "Ajmer",
            "Bhilwara",
            "Alwar",
            "Bharatpur",
            "Pali",
            "Barmer",
            "Sikar",
            "Tonk",
            "Sadulpur",
            "Sawai Madhopur",
            "Nagaur",
            "Makrana",
            "Sujangarh",
            "Sardarshahar",
            "Ladnu",
            "Ratangarh",
            "Nokha",
            "Nimbahera",
            "Suratgarh",
            "Rajsamand",
            "Lachhmangarh",
            "Rajgarh (Churu)",
            "Nasirabad",
            "Nohar",
            "Phalodi",
            "Nathdwara",
            "Pilani",
            "Merta City",
            "Sojat",
            "Neem-Ka-Thana",
            "Sirohi",
            "Pratapgarh",
            "Rawatbhata",
            "Sangaria",
            "Lalsot",
            "Pilibanga",
            "Pipar City",
            "Taranagar",
            "Vijainagar, Ajmer",
            "Sumerpur",
            "Sagwara",
            "Ramganj Mandi",
            "Lakheri",
            "Udaipurwati",
            "Losal",
            "Sri Madhopur",
            "Ramngarh",
            "Rawatsar",
            "Rajakhera",
            "Shahpura",
            "Shahpura",
            "Raisinghnagar",
            "Malpura",
            "Nadbai",
            "Sanchore",
            "Nagar",
            "Rajgarh (Alwar)",
            "Sheoganj",
            "Sadri",
            "Todaraisingh",
            "Todabhim",
            "Reengus",
            "Rajaldesar",
            "Sadulshahar",
            "Sambhar",
            "Prantij",
            "Mount Abu",
            "Mangrol",
            "Phulera",
            "Mandawa",
            "Pindwara",
            "Mandalgarh",
            "Takhatgarh"
          ],

          Assam: [
            "Guwahati",
            "Silchar",
            "Dibrugarh",
            "Nagaon",
            "Tinsukia",
            "Jorhat",
            "Bongaigaon City",
            "Dhubri",
            "Diphu",
            "North Lakhimpur",
            "Tezpur",
            "Karimganj",
            "Sibsagar",
            "Goalpara",
            "Barpeta",
            "Lanka",
            "Lumding",
            "Mankachar",
            "Nalbari",
            "Rangia",
            "Margherita",
            "Mangaldoi",
            "Silapathar",
            "Mariani",
            "Marigaon"
          ],

          Odisha: [
            "Bhubaneswar",
            "Cuttack",
            "Raurkela",
            "Brahmapur",
            "Sambalpur",
            "Puri",
            "Baleshwar Town",
            "Baripada Town",
            "Bhadrak",
            "Balangir",
            "Jharsuguda",
            "Bargarh",
            "Paradip",
            "Bhawanipatna",
            "Dhenkanal",
            "Barbil",
            "Kendujhar",
            "Sunabeda",
            "Rayagada",
            "Jatani",
            "Byasanagar",
            "Kendrapara",
            "Rajagangapur",
            "Parlakhemundi",
            "Talcher",
            "Sundargarh",
            "Phulabani",
            "Pattamundai",
            "Titlagarh",
            "Nabarangapur",
            "Soro",
            "Malkangiri",
            "Rairangpur",
            "Tarbha"
          ],

          Chhattisgarh: [
            "Raipur",
            "Bhilai Nagar",
            "Korba",
            "Bilaspur",
            "Durg",
            "Rajnandgaon",
            "Jagdalpur",
            "Raigarh",
            "Ambikapur",
            "Mahasamund",
            "Dhamtari",
            "Chirmiri",
            "Bhatapara",
            "Dalli-Rajhara",
            "Naila Janjgir",
            "Tilda Newra",
            "Mungeli",
            "Manendragarh",
            "Sakti"
          ],

          "Jammu and Kashmir": [
            "Srinagar",
            "Jammu",
            "Baramula",
            "Anantnag",
            "Sopore",
            "KathUrban Agglomeration",
            "Rajauri",
            "Punch",
            "Udhampur"
          ],

          Karnataka: [
            "Bengaluru",
            "Hubli-Dharwad",
            "Belagavi",
            "Mangaluru",
            "Davanagere",
            "Ballari",
            "Mysore",
            "Tumkur",
            "Shivamogga",
            "Raayachuru",
            "Robertson Pet",
            "Kolar",
            "Mandya",
            "Udupi",
            "Chikkamagaluru",
            "Karwar",
            "Ranebennuru",
            "Ranibennur",
            "Ramanagaram",
            "Gokak",
            "Yadgir",
            "Rabkavi Banhatti",
            "Shahabad",
            "Sirsi",
            "Sindhnur",
            "Tiptur",
            "Arsikere",
            "Nanjangud",
            "Sagara",
            "Sira",
            "Puttur",
            "Athni",
            "Mulbagal",
            "Surapura",
            "Siruguppa",
            "Mudhol",
            "Sidlaghatta",
            "Shahpur",
            "Saundatti-Yellamma",
            "Wadi",
            "Manvi",
            "Nelamangala",
            "Lakshmeshwar",
            "Ramdurg",
            "Nargund",
            "Tarikere",
            "Malavalli",
            "Savanur",
            "Lingsugur",
            "Vijayapura",
            "Sankeshwara",
            "Madikeri",
            "Talikota",
            "Sedam",
            "Shikaripur",
            "Mahalingapura",
            "Mudalagi",
            "Muddebihal",
            "Pavagada",
            "Malur",
            "Sindhagi",
            "Sanduru",
            "Afzalpur",
            "Maddur",
            "Madhugiri",
            "Tekkalakote",
            "Terdal",
            "Mudabidri",
            "Magadi",
            "Navalgund",
            "Shiggaon",
            "Shrirangapattana",
            "Sindagi",
            "Sakaleshapura",
            "Srinivaspur",
            "Ron",
            "Mundargi",
            "Sadalagi",
            "Piriyapatna",
            "Adyar"
          ],

          Manipur: ["Imphal", "Thoubal", "Lilong", "Mayang Imphal"],
          Kerala: [
            "Thiruvananthapuram",
            "Kochi",
            "Kozhikode",
            "Kollam",
            "Thrissur",
            "Palakkad",
            "Alappuzha",
            "Malappuram",
            "Ponnani",
            "Vatakara",
            "Kanhangad",
            "Taliparamba",
            "Koyilandy",
            "Neyyattinkara",
            "Kayamkulam",
            "Nedumangad",
            "Kannur",
            "Tirur",
            "Kottayam",
            "Kasaragod",
            "Kunnamkulam",
            "Ottappalam",
            "Thiruvalla",
            "Thodupuzha",
            "Chalakudy",
            "Changanassery",
            "Punalur",
            "Nilambur",
            "Cherthala",
            "Perinthalmanna",
            "Mattannur",
            "Shoranur",
            "Varkala",
            "Paravoor",
            "Pathanamthitta",
            "Peringathur",
            "Attingal",
            "Kodungallur",
            "Pappinisseri",
            "Chittur-Thathamangalam",
            "Muvattupuzha",
            "Adoor",
            "Mavelikkara",
            "Mavoor",
            "Perumbavoor",
            "Vaikom",
            "Palai",
            "Panniyannur",
            "Guruvayoor",
            "Puthuppally",
            "Panamattom"
          ],

          Delhi: ["Delhi", "New Delhi"],
          "Dadra and Nagar Haveli": ["Silvassa"],
          Puducherry: ["Pondicherry", "Karaikal", "Yanam", "Mahe"],
          Uttarakhand: [
            "Dehradun",
            "Hardwar",
            "Haldwani-cum-Kathgodam",
            "Srinagar",
            "Kashipur",
            "Roorkee",
            "Rudrapur",
            "Rishikesh",
            "Ramnagar",
            "Pithoragarh",
            "Manglaur",
            "Nainital",
            "Mussoorie",
            "Tehri",
            "Pauri",
            "Nagla",
            "Sitarganj",
            "Bageshwar"
          ],

          "Uttar Pradesh": [
            "Lucknow",
            "Kanpur",
            "Firozabad",
            "Agra",
            "Meerut",
            "Varanasi",
            "Allahabad",
            "Amroha",
            "Moradabad",
            "Aligarh",
            "Saharanpur",
            "Noida",
            "Loni",
            "Jhansi",
            "Shahjahanpur",
            "Rampur",
            "Modinagar",
            "Hapur",
            "Etawah",
            "Sambhal",
            "Orai",
            "Bahraich",
            "Unnao",
            "Rae Bareli",
            "Lakhimpur",
            "Sitapur",
            "Lalitpur",
            "Pilibhit",
            "Chandausi",
            "Hardoi ",
            "Azamgarh",
            "Khair",
            "Sultanpur",
            "Tanda",
            "Nagina",
            "Shamli",
            "Najibabad",
            "Shikohabad",
            "Sikandrabad",
            "Shahabad, Hardoi",
            "Pilkhuwa",
            "Renukoot",
            "Vrindavan",
            "Ujhani",
            "Laharpur",
            "Tilhar",
            "Sahaswan",
            "Rath",
            "Sherkot",
            "Kalpi",
            "Tundla",
            "Sandila",
            "Nanpara",
            "Sardhana",
            "Nehtaur",
            "Seohara",
            "Padrauna",
            "Mathura",
            "Thakurdwara",
            "Nawabganj",
            "Siana",
            "Noorpur",
            "Sikandra Rao",
            "Puranpur",
            "Rudauli",
            "Thana Bhawan",
            "Palia Kalan",
            "Zaidpur",
            "Nautanwa",
            "Zamania",
            "Shikarpur, Bulandshahr",
            "Naugawan Sadat",
            "Fatehpur Sikri",
            "Shahabad, Rampur",
            "Robertsganj",
            "Utraula",
            "Sadabad",
            "Rasra",
            "Lar",
            "Lal Gopalganj Nindaura",
            "Sirsaganj",
            "Pihani",
            "Shamsabad, Agra",
            "Rudrapur",
            "Soron",
            "SUrban Agglomerationr",
            "Samdhan",
            "Sahjanwa",
            "Rampur Maniharan",
            "Sumerpur",
            "Shahganj",
            "Tulsipur",
            "Tirwaganj",
            "PurqUrban Agglomerationzi",
            "Shamsabad, Farrukhabad",
            "Warhapur",
            "Powayan",
            "Sandi",
            "Achhnera",
            "Naraura",
            "Nakur",
            "Sahaspur",
            "Safipur",
            "Reoti",
            "Sikanderpur",
            "Saidpur",
            "Sirsi",
            "Purwa",
            "Parasi",
            "Lalganj",
            "Phulpur",
            "Shishgarh",
            "Sahawar",
            "Samthar",
            "Pukhrayan",
            "Obra",
            "Niwai",
            "Mirzapur"
          ],

          Bihar: [
            "Patna",
            "Gaya",
            "Bhagalpur",
            "Muzaffarpur",
            "Darbhanga",
            "Arrah",
            "Begusarai",
            "Chhapra",
            "Katihar",
            "Munger",
            "Purnia",
            "Saharsa",
            "Sasaram",
            "Hajipur",
            "Dehri-on-Sone",
            "Bettiah",
            "Motihari",
            "Bagaha",
            "Siwan",
            "Kishanganj",
            "Jamalpur",
            "Buxar",
            "Jehanabad",
            "Aurangabad",
            "Lakhisarai",
            "Nawada",
            "Jamui",
            "Sitamarhi",
            "Araria",
            "Gopalganj",
            "Madhubani",
            "Masaurhi",
            "Samastipur",
            "Mokameh",
            "Supaul",
            "Dumraon",
            "Arwal",
            "Forbesganj",
            "BhabUrban Agglomeration",
            "Narkatiaganj",
            "Naugachhia",
            "Madhepura",
            "Sheikhpura",
            "Sultanganj",
            "Raxaul Bazar",
            "Ramnagar",
            "Mahnar Bazar",
            "Warisaliganj",
            "Revelganj",
            "Rajgir",
            "Sonepur",
            "Sherghati",
            "Sugauli",
            "Makhdumpur",
            "Maner",
            "Rosera",
            "Nokha",
            "Piro",
            "Rafiganj",
            "Marhaura",
            "Mirganj",
            "Lalganj",
            "Murliganj",
            "Motipur",
            "Manihari",
            "Sheohar",
            "Maharajganj",
            "Silao",
            "Barh",
            "Asarganj"
          ],

          Gujarat: [
            "Ahmedabad",
            "Surat",
            "Vadodara",
            "Rajkot",
            "Bhavnagar",
            "Jamnagar",
            "Nadiad",
            "Porbandar",
            "Anand",
            "Morvi",
            "Mahesana",
            "Bharuch",
            "Vapi",
            "Navsari",
            "Veraval",
            "Bhuj",
            "Godhra",
            "Palanpur",
            "Valsad",
            "Patan",
            "Deesa",
            "Amreli",
            "Anjar",
            "Dhoraji",
            "Khambhat",
            "Mahuva",
            "Keshod",
            "Wadhwan",
            "Ankleshwar",
            "Savarkundla",
            "Kadi",
            "Visnagar",
            "Upleta",
            "Una",
            "Sidhpur",
            "Unjha",
            "Mangrol",
            "Viramgam",
            "Modasa",
            "Palitana",
            "Petlad",
            "Kapadvanj",
            "Sihor",
            "Wankaner",
            "Limbdi",
            "Mandvi",
            "Thangadh",
            "Vyara",
            "Padra",
            "Lunawada",
            "Rajpipla",
            "Vapi",
            "Umreth",
            "Sanand",
            "Rajula",
            "Radhanpur",
            "Mahemdabad",
            "Ranavav",
            "Tharad",
            "Mansa",
            "Umbergaon",
            "Talaja",
            "Vadnagar",
            "Manavadar",
            "Salaya",
            "Vijapur",
            "Pardi",
            "Rapar",
            "Songadh",
            "Lathi",
            "Adalaj",
            "Chhapra",
            "Gandhinagar"
          ],

          Telangana: [
            "Hyderabad",
            "Warangal",
            "Nizamabad",
            "Karimnagar",
            "Ramagundam",
            "Khammam",
            "Mahbubnagar",
            "Mancherial",
            "Adilabad",
            "Suryapet",
            "Jagtial",
            "Miryalaguda",
            "Nirmal",
            "Kamareddy",
            "Kothagudem",
            "Bodhan",
            "Palwancha",
            "Mandamarri",
            "Koratla",
            "Sircilla",
            "Tandur",
            "Siddipet",
            "Wanaparthy",
            "Kagaznagar",
            "Gadwal",
            "Sangareddy",
            "Bellampalle",
            "Bhongir",
            "Vikarabad",
            "Jangaon",
            "Bhadrachalam",
            "Bhainsa",
            "Farooqnagar",
            "Medak",
            "Narayanpet",
            "Sadasivpet",
            "Yellandu",
            "Manuguru",
            "Kyathampalle",
            "Nagarkurnool"
          ],

          Meghalaya: ["Shillong", "Tura", "Nongstoin"],
          "Arunachal Pradesh": ["Naharlagun", "Pasighat"],
          Maharashtra: [
            "Mumbai",
            "Pune",
            "Nagpur",
            "Thane",
            "Nashik",
            "Kalyan-Dombivali",
            "Vasai-Virar",
            "Solapur",
            "Mira-Bhayandar",
            "Bhiwandi",
            "Amravati",
            "Nanded-Waghala",
            "Sangli",
            "Malegaon",
            "Akola",
            "Latur",
            "Dhule",
            "Ahmednagar",
            "Ichalkaranji",
            "Parbhani",
            "Panvel",
            "Yavatmal",
            "Achalpur",
            "Osmanabad",
            "Nandurbar",
            "Satara",
            "Wardha",
            "Udgir",
            "Aurangabad",
            "Amalner",
            "Akot",
            "Pandharpur",
            "Shrirampur",
            "Parli",
            "Washim",
            "Ambejogai",
            "Manmad",
            "Ratnagiri",
            "Uran Islampur",
            "Pusad",
            "Sangamner",
            "Shirpur-Warwade",
            "Malkapur",
            "Wani",
            "Lonavla",
            "Talegaon Dabhade",
            "Anjangaon",
            "Umred",
            "Palghar",
            "Shegaon",
            "Ozar",
            "Phaltan",
            "Yevla",
            "Shahade",
            "Vita",
            "Umarkhed",
            "Warora",
            "Pachora",
            "Tumsar",
            "Manjlegaon",
            "Sillod",
            "Arvi",
            "Nandura",
            "Vaijapur",
            "Wadgaon Road",
            "Sailu",
            "Murtijapur",
            "Tasgaon",
            "Mehkar",
            "Yawal",
            "Pulgaon",
            "Nilanga",
            "Wai",
            "Umarga",
            "Paithan",
            "Rahuri",
            "Nawapur",
            "Tuljapur",
            "Morshi",
            "Purna",
            "Satana",
            "Pathri",
            "Sinnar",
            "Uchgaon",
            "Uran",
            "Pen",
            "Karjat",
            "Manwath",
            "Partur",
            "Sangole",
            "Mangrulpir",
            "Risod",
            "Shirur",
            "Savner",
            "Sasvad",
            "Pandharkaoda",
            "Talode",
            "Shrigonda",
            "Shirdi",
            "Raver",
            "Mukhed",
            "Rajura",
            "Vadgaon Kasba",
            "Tirora",
            "Mahad",
            "Lonar",
            "Sawantwadi",
            "Pathardi",
            "Pauni",
            "Ramtek",
            "Mul",
            "Soyagaon",
            "Mangalvedhe",
            "Narkhed",
            "Shendurjana",
            "Patur",
            "Mhaswad",
            "Loha",
            "Nandgaon",
            "Warud"
          ],

          Goa: ["Marmagao", "Panaji", "Margao", "Mapusa"],
          "West Bengal": [
            "Kolkata",
            "Siliguri",
            "Asansol",
            "Raghunathganj",
            "Kharagpur",
            "Naihati",
            "English Bazar",
            "Baharampur",
            "Hugli-Chinsurah",
            "Raiganj",
            "Jalpaiguri",
            "Santipur",
            "Balurghat",
            "Medinipur",
            "Habra",
            "Ranaghat",
            "Bankura",
            "Nabadwip",
            "Darjiling",
            "Purulia",
            "Arambagh",
            "Tamluk",
            "AlipurdUrban Agglomerationr",
            "Suri",
            "Jhargram",
            "Gangarampur",
            "Rampurhat",
            "Kalimpong",
            "Sainthia",
            "Taki",
            "Murshidabad",
            "Memari",
            "Paschim Punropara",
            "Tarakeswar",
            "Sonamukhi",
            "PandUrban Agglomeration",
            "Mainaguri",
            "Malda",
            "Panchla",
            "Raghunathpur",
            "Mathabhanga",
            "Monoharpur",
            "Srirampore",
            "Adra"
          ]
        })
      },
      {
        path: "noButton",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.noButton
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const dataSourcesCtx = usePlasmicDataSourceContext();
  const plasmicInvalidate = usePlasmicInvalidate();
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantszapf5SksSeNd()
  });
  return (() => {
    const child$Props = {
      className: classNames(
        "__wab_instance",
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.form,
        { [sty.formnoButton]: hasVariant($state, "noButton", "noButton") }
      ),
      extendedOnValuesChange: async (...eventArgs) => {
        generateStateOnChangePropForCodeComponents(
          $state,
          "value",
          ["form", "value"],
          FormWrapper_Helpers
        ).apply(null, eventArgs);
      },
      formItems: [
        { label: "Name", name: "name", inputType: "Text" },
        { label: "Message", name: "message", inputType: "Text Area" }
      ],

      labelCol: { span: 8, horizontalOnly: true },
      layout: "vertical",
      mode: "advanced",
      onFinish: async values => {
        const $steps = {};
        $steps["graphqlMutation"] = true
          ? (() => {
              const actionArgs = {
                continueOnError: true,
                dataOp: {
                  sourceId: "bvg9JqrXbdUtvMXZbC26cd",
                  opId: "e1db16f1-0c73-4947-88fd-5a3b8e29000c",
                  userArgs: {
                    variables: [
                      $props.locationId,
                      parseInt($state.form.value.pincode),
                      $state.form.value.street,
                      $state.city.value,
                      $state.state.value
                    ]
                  },
                  cacheKey: null,
                  invalidatedKeys: ["plasmic_refresh_all"],
                  roleId: null
                }
              };
              return (async ({ dataOp, continueOnError }) => {
                try {
                  const response = await executePlasmicDataOp(dataOp, {
                    userAuthToken: dataSourcesCtx?.userAuthToken,
                    user: dataSourcesCtx?.user
                  });
                  await plasmicInvalidate(dataOp.invalidatedKeys);
                  return response;
                } catch (e) {
                  if (!continueOnError) {
                    throw e;
                  }
                  return e;
                }
              })?.apply(null, [actionArgs]);
            })()
          : undefined;
        if (
          $steps["graphqlMutation"] != null &&
          typeof $steps["graphqlMutation"] === "object" &&
          typeof $steps["graphqlMutation"].then === "function"
        ) {
          $steps["graphqlMutation"] = await $steps["graphqlMutation"];
        }
        $steps["graphqlMutation2"] =
          $props.userInfo && !$props.locationId
            ? (() => {
                const actionArgs = {
                  dataOp: {
                    sourceId: "bvg9JqrXbdUtvMXZbC26cd",
                    opId: "7d4dd225-2665-4270-87e4-97eea9603581",
                    userArgs: {
                      variables: [
                        $props.userInfo,
                        parseInt($state.form.value.pincode),
                        $state.form.value.street,
                        $state.city.value,
                        $state.state.value
                      ]
                    },
                    cacheKey: null,
                    invalidatedKeys: ["plasmic_refresh_all"],
                    roleId: null
                  }
                };
                return (async ({ dataOp, continueOnError }) => {
                  try {
                    const response = await executePlasmicDataOp(dataOp, {
                      userAuthToken: dataSourcesCtx?.userAuthToken,
                      user: dataSourcesCtx?.user
                    });
                    await plasmicInvalidate(dataOp.invalidatedKeys);
                    return response;
                  } catch (e) {
                    if (!continueOnError) {
                      throw e;
                    }
                    return e;
                  }
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
        if (
          $steps["graphqlMutation2"] != null &&
          typeof $steps["graphqlMutation2"] === "object" &&
          typeof $steps["graphqlMutation2"].then === "function"
        ) {
          $steps["graphqlMutation2"] = await $steps["graphqlMutation2"];
        }
        $steps["invokeGlobalAction"] =
          $steps.createLocation?.data?.response ||
          $steps.updateLocation?.data?.response
            ? (() => {
                const actionArgs = { args: ["success", "Updated!"] };
                return $globalActions[
                  "plasmic-antd5-config-provider.showNotification"
                ]?.apply(null, [...actionArgs.args]);
              })()
            : undefined;
        if (
          $steps["invokeGlobalAction"] != null &&
          typeof $steps["invokeGlobalAction"] === "object" &&
          typeof $steps["invokeGlobalAction"].then === "function"
        ) {
          $steps["invokeGlobalAction"] = await $steps["invokeGlobalAction"];
        }
        $steps["refreshData"] = true
          ? (() => {
              const actionArgs = {
                queryInvalidation: ["d601eccc-4ce0-4155-aadf-df759265513a"]
              };
              return (async ({ queryInvalidation }) => {
                if (!queryInvalidation) {
                  return;
                }
                await plasmicInvalidate(queryInvalidation);
              })?.apply(null, [actionArgs]);
            })()
          : undefined;
        if (
          $steps["refreshData"] != null &&
          typeof $steps["refreshData"] === "object" &&
          typeof $steps["refreshData"].then === "function"
        ) {
          $steps["refreshData"] = await $steps["refreshData"];
        }
      },
      onIsSubmittingChange: async (...eventArgs) => {
        generateStateOnChangePropForCodeComponents(
          $state,
          "isSubmitting",
          ["form", "isSubmitting"],
          FormWrapper_Helpers
        ).apply(null, eventArgs);
      },
      ref: ref => {
        $refs["form"] = ref;
      },
      submitSlot: null,
      wrapperCol: { span: 16, horizontalOnly: true }
    };
    initializeCodeComponentStates(
      $state,
      [
        {
          name: "value",
          plasmicStateName: "form.value"
        },
        {
          name: "isSubmitting",
          plasmicStateName: "form.isSubmitting"
        }
      ],

      [],
      FormWrapper_Helpers ?? {},
      child$Props
    );
    return (
      <FormWrapper
        data-plasmic-name={"form"}
        data-plasmic-override={overrides.form}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        {...child$Props}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___924W5)}
        >
          <FormItemWrapper
            className={classNames("__wab_instance", sty.formField__sS0A)}
            label={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__emjo3
                )}
              >
                {"Street"}
              </div>
            }
            name={"street"}
            noLabel={true}
          >
            <div className={classNames(projectcss.all, sty.freeBox__a6VWy)}>
              {(() => {
                const child$Props = {
                  bordered: false,
                  className: classNames("__wab_instance", sty.input),
                  onChange: async (...eventArgs) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["input", "value"],
                      AntdInput_Helpers
                    ).apply(null, eventArgs);
                  },
                  placeholder: "Street/Building",
                  value: generateStateValueProp($state, ["input", "value"])
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "value",
                      plasmicStateName: "input.value"
                    }
                  ],

                  [],
                  AntdInput_Helpers ?? {},
                  child$Props
                );
                return (
                  <AntdInput
                    data-plasmic-name={"input"}
                    data-plasmic-override={overrides.input}
                    {...child$Props}
                  />
                );
              })()}
            </div>
          </FormItemWrapper>
          <FormItemWrapper
            className={classNames("__wab_instance", sty.formField__ycyre)}
            label={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zfLrG
                )}
              >
                {"City"}
              </div>
            }
            name={"city"}
            noLabel={true}
          >
            <div className={classNames(projectcss.all, sty.freeBox__a6Ql0)}>
              <AntdSelect
                data-plasmic-name={"city"}
                data-plasmic-override={overrides.city}
                bordered={false}
                className={classNames("__wab_instance", sty.city)}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                onChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["city", "value"]).apply(
                    null,
                    eventArgs
                  );
                }}
                options={[
                  { value: "option1", label: "Option 1", type: "option" },
                  { value: "option2", label: "Option 2", type: "option" }
                ]}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wOfLi
                    )}
                  >
                    {"City"}
                  </div>
                }
                popupScopeClassName={sty["city__popup"]}
                showSearch={true}
                value={generateStateValueProp($state, ["city", "value"])}
              />
            </div>
          </FormItemWrapper>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__c5Nmq)}
        >
          <FormItemWrapper
            className={classNames("__wab_instance", sty.formField__zXsbB)}
            label={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wEbj3
                )}
              >
                {"State"}
              </div>
            }
            name={"state"}
            noLabel={true}
          >
            <div className={classNames(projectcss.all, sty.freeBox___09NY0)}>
              <AntdSelect
                data-plasmic-name={"state"}
                data-plasmic-override={overrides.state}
                bordered={false}
                className={classNames("__wab_instance", sty.state)}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                onChange={async (...eventArgs) => {
                  generateStateOnChangeProp($state, ["state", "value"]).apply(
                    null,
                    eventArgs
                  );
                }}
                options={[
                  { value: "option1", label: "Option 1", type: "option" },
                  { value: "option2", label: "Option 2", type: "option" }
                ]}
                placeholder={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rpldv
                    )}
                  >
                    {"State"}
                  </div>
                }
                popupScopeClassName={sty["state__popup"]}
                showSearch={true}
                value={generateStateValueProp($state, ["state", "value"])}
              />
            </div>
          </FormItemWrapper>
          <FormItemWrapper
            className={classNames("__wab_instance", sty.formField__jf3Ht)}
            label={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8555X
                )}
              >
                {"Pincode"}
              </div>
            }
            name={"pincode"}
            noLabel={true}
          >
            <div className={classNames(projectcss.all, sty.freeBox__zsz9K)}>
              {(() => {
                const child$Props = {
                  bordered: false,
                  className: classNames("__wab_instance", sty.input2),
                  onChange: async (...eventArgs) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["input2", "value"],
                      AntdInput_Helpers
                    ).apply(null, eventArgs);
                  },
                  placeholder: "Pincode",
                  value: generateStateValueProp($state, ["input2", "value"])
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "value",
                      plasmicStateName: "input2.value"
                    }
                  ],

                  [],
                  AntdInput_Helpers ?? {},
                  child$Props
                );
                return (
                  <AntdInput
                    data-plasmic-name={"input2"}
                    data-plasmic-override={overrides.input2}
                    {...child$Props}
                  />
                );
              })()}
            </div>
          </FormItemWrapper>
        </Stack__>
        <ButtonContainer
          data-plasmic-name={"buttonContainer"}
          data-plasmic-override={overrides.buttonContainer}
          className={classNames("__wab_instance", sty.buttonContainer)}
        >
          <AntdButton
            data-plasmic-name={"button"}
            data-plasmic-override={overrides.button}
            className={classNames("__wab_instance", sty.button)}
            danger={true}
            submitsForm={true}
            type={"ghost"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tozMa
              )}
            >
              {"Update"}
            </div>
          </AntdButton>
        </ButtonContainer>
      </FormWrapper>
    );
  })();
}

const PlasmicDescendants = {
  form: [
    "form",
    "input",
    "city",
    "state",
    "input2",
    "buttonContainer",
    "button"
  ],

  input: ["input"],
  city: ["city"],
  state: ["state"],
  input2: ["input2"],
  buttonContainer: ["buttonContainer", "button"],
  button: ["button"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLocationForm__ArgProps,
          internalVariantPropNames: PlasmicLocationForm__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLocationForm__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "form") {
    func.displayName = "PlasmicLocationForm";
  } else {
    func.displayName = `PlasmicLocationForm.${nodeName}`;
  }
  return func;
}

export const PlasmicLocationForm = Object.assign(
  // Top-level PlasmicLocationForm renders the root element
  makeNodeComponent("form"),
  {
    // Helper components rendering sub-elements
    input: makeNodeComponent("input"),
    city: makeNodeComponent("city"),
    state: makeNodeComponent("state"),
    input2: makeNodeComponent("input2"),
    buttonContainer: makeNodeComponent("buttonContainer"),
    button: makeNodeComponent("button"),
    // Metadata about props expected for PlasmicLocationForm
    internalVariantProps: PlasmicLocationForm__VariantProps,
    internalArgProps: PlasmicLocationForm__ArgProps
  }
);

export default PlasmicLocationForm;
/* prettier-ignore-end */
